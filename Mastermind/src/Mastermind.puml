@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam style strictuml
hide empty members

package Controller{
    class JeuController{
        + JeuController(jeu : Manche)
        + genererCombinaisonSecrete(jeu : Manche)
        + genererIndices()
        + verifierCombinaison() : Boolean
        + run()
    }
}

package java.awt{
    class Color
}

package Model{
    class Jeu
    {
        - score : Integer
        + Jeu()
    }
    class Manche {
        - TentativeRestant : Integer
        - tentative : Color[][]
        + Manche()
        + addObserver(obs : JeuObserver)
        + notifyObserver()
        + getcombinaisonSecrete() : Color[]
        + setCombainaionSecrete(combi : Color[])
        + getTentativeRestant() : Integer
        + getTentative()
    }

    Manche o-d->"*\n -combinaisonSecrete" Color

    interface JeuObserver{
       + Update()
    }
}
package View{
    class JeuWindow extends JFrame implements Model.JeuObserver{
        - jeu : Manche
        - jeuController : JeuController
        + JeuWindow(jeu : Manche, jeuController : JeuController)
        + Update()

    }

    class JeuTextuelle implements Model.JeuObserver
    {
        -manche : Manche
        -jeuController : JeuController
        +JeuTextuelle(jeu : Manche, jeuController : JeuController)
        +Update()
    }
}
class MasterMind
{
    main(args : String[])
}
View.JeuWindow o-> "1 \n controller"Controller.JeuController : > send
View.JeuWindow o->"1 \n Manche" Model.Manche : > display
MasterMind ..> View.JeuWindow : <<create>>
MasterMind ..> Controller.JeuController : <<create>>
MasterMind ..> Model.Manche: <<create>>
Model.Manche "* \n observers" o-> Model.JeuObserver : < observe
Controller.JeuController o->"1 \n Manche" Model.Manche : > modifie
@enduml